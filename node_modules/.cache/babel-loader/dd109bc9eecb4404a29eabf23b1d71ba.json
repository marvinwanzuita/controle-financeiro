{"ast":null,"code":"var _jsxFileName = \"C:\\\\programacao\\\\react\\\\controle-financeiro\\\\src\\\\components\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Grid from \"../Grid\";\nimport * as C from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    handleAdd,\n    transactionsList,\n    setTransactionsList\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isExpense, setExpense] = useState(false);\n\n  const generateID = () => Math.round(Math.random() * 1000);\n\n  const handleSave = () => {\n    if (!desc || !amount) {\n      alert(\"Informe a descrição e o valor!\");\n      return;\n    } else if (amount < 1) {\n      alert(\"O valor tem que ser positivo!\");\n      return;\n    }\n\n    const transaction = {\n      id: generateID(),\n      desc: desc,\n      amount: amount,\n      expense: isExpense\n    };\n    handleAdd(transaction);\n    setDesc(\"\");\n    setAmount(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(C.Container, {\n      children: [/*#__PURE__*/_jsxDEV(C.InputContent, {\n        children: [/*#__PURE__*/_jsxDEV(C.Label, {\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Input, {\n          value: desc,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.InputContent, {\n        children: [/*#__PURE__*/_jsxDEV(C.Label, {\n          children: \"Valor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Input, {\n          value: amount,\n          type: \"number\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.RadioGroup, {\n        children: [/*#__PURE__*/_jsxDEV(C.Input, {\n          type: \"radio\",\n          id: \"rIncome\",\n          defaultChecked: true,\n          name: \"group1\",\n          onChange: () => setExpense(!isExpense)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Label, {\n          htmlFor: \"rIncome\",\n          children: \"Entrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Input, {\n          type: \"radio\",\n          id: \"rExpenses\",\n          name: \"group1\",\n          onChange: () => setExpense(!isExpense)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Label, {\n          htmlFor: \"rExpenses\",\n          children: \"Sa\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.Button, {\n        onClick: handleSave,\n        children: \"ADICIONAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      itens: transactionsList,\n      setItens: setTransactionsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"7XANGAFU4fIQXqJrkr9hEp6NfzQ=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/programacao/react/controle-financeiro/src/components/Form/index.js"],"names":["React","useState","Grid","C","Form","handleAdd","transactionsList","setTransactionsList","desc","setDesc","amount","setAmount","isExpense","setExpense","generateID","Math","round","random","handleSave","alert","transaction","id","expense","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"../Grid\";\nimport * as C from \"./styles\";\n\nconst Form = ({ handleAdd, transactionsList, setTransactionsList }) => {\n  const [desc, setDesc] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isExpense, setExpense] = useState(false);\n\n  const generateID = () => Math.round(Math.random() * 1000);\n\n  const handleSave = () => {\n    if (!desc || !amount) {\n      alert(\"Informe a descrição e o valor!\");\n      return;\n    } else if (amount < 1) {\n      alert(\"O valor tem que ser positivo!\");\n      return;\n    }\n\n    const transaction = {\n      id: generateID(),\n      desc: desc,\n      amount: amount,\n      expense: isExpense,\n    };\n\n    handleAdd(transaction);\n\n    setDesc(\"\");\n    setAmount(\"\");\n  };\n\n  return (\n    <>\n      <C.Container>\n        <C.InputContent>\n          <C.Label>Descrição</C.Label>\n          <C.Input value={desc} onChange={(e) => setDesc(e.target.value)} />\n        </C.InputContent>\n        <C.InputContent>\n          <C.Label>Valor</C.Label>\n          <C.Input\n            value={amount}\n            type=\"number\"\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </C.InputContent>\n        <C.RadioGroup>\n          <C.Input\n            type=\"radio\"\n            id=\"rIncome\"\n            defaultChecked\n            name=\"group1\"\n            onChange={() => setExpense(!isExpense)}\n          />\n          <C.Label htmlFor=\"rIncome\">Entrada</C.Label>\n          <C.Input\n            type=\"radio\"\n            id=\"rExpenses\"\n            name=\"group1\"\n            onChange={() => setExpense(!isExpense)}\n          />\n          <C.Label htmlFor=\"rExpenses\">Saída</C.Label>\n        </C.RadioGroup>\n        <C.Button onClick={handleSave}>ADICIONAR</C.Button>\n      </C.Container>\n      <Grid itens={transactionsList} setItens={setTransactionsList} />\n    </>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}